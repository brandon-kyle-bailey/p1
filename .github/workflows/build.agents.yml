name: Build Agents

on:
  push:
    branches: [master]
    paths:
      - "apps/agent/**"

jobs:
  build:
    name: Build Agent
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        os: [linux, windows, macos]
        goarch: [amd64, arm64]
        include:
          - os: linux
            runner: ubuntu-latest
          - os: windows
            runner: windows-latest
          - os: macos
            runner: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"

      - name: Build
        working-directory: apps/agent
        shell: ${{ matrix.os == 'windows' && 'pwsh' || 'bash' }}
        run: |
          mkdir -p dist/${{ matrix.os }}-${{ matrix.goarch }}
          if [ "${{ matrix.os }}" = "windows" ]; then
            $env:GOOS = "windows"
            $env:GOARCH = "${{ matrix.goarch }}"
            go build -o dist/windows-${{ matrix.goarch }}/agent.exe ./cmd/agent
          else
            GOOS=${{ matrix.os == 'macos' && 'darwin' || matrix.os }} \
            GOARCH=${{ matrix.goarch }} go build -o dist/${{ matrix.os == 'macos' && 'darwin' || matrix.os }}-${{ matrix.goarch }}/agent ./cmd/agent
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: agent-${{ matrix.os == 'macos' && 'darwin' || matrix.os }}-${{ matrix.goarch }}
          path: |
            apps/agent/dist/${{ matrix.os == 'macos' && 'darwin' || matrix.os }}-${{ matrix.goarch }}
            apps/agent/deploy/${{ matrix.os == 'macos' && 'darwin' || matrix.os }}/*
